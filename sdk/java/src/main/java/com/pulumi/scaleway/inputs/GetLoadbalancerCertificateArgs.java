// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetLoadbalancerCertificateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLoadbalancerCertificateArgs Empty = new GetLoadbalancerCertificateArgs();

    /**
     * The certificate id.
     * - Only one of `name` and `certificate_id` should be specified.
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return The certificate id.
     * - Only one of `name` and `certificate_id` should be specified.
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * The load-balancer ID this certificate is attached to.
     * 
     */
    @Import(name="lbId")
    private @Nullable Output<String> lbId;

    /**
     * @return The load-balancer ID this certificate is attached to.
     * 
     */
    public Optional<Output<String>> lbId() {
        return Optional.ofNullable(this.lbId);
    }

    /**
     * The name of the certificate backend.
     * - When using a certificate `name` you should specify the `lb-id`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the certificate backend.
     * - When using a certificate `name` you should specify the `lb-id`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetLoadbalancerCertificateArgs() {}

    private GetLoadbalancerCertificateArgs(GetLoadbalancerCertificateArgs $) {
        this.certificateId = $.certificateId;
        this.lbId = $.lbId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLoadbalancerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLoadbalancerCertificateArgs $;

        public Builder() {
            $ = new GetLoadbalancerCertificateArgs();
        }

        public Builder(GetLoadbalancerCertificateArgs defaults) {
            $ = new GetLoadbalancerCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateId The certificate id.
         * - Only one of `name` and `certificate_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId The certificate id.
         * - Only one of `name` and `certificate_id` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param lbId The load-balancer ID this certificate is attached to.
         * 
         * @return builder
         * 
         */
        public Builder lbId(@Nullable Output<String> lbId) {
            $.lbId = lbId;
            return this;
        }

        /**
         * @param lbId The load-balancer ID this certificate is attached to.
         * 
         * @return builder
         * 
         */
        public Builder lbId(String lbId) {
            return lbId(Output.of(lbId));
        }

        /**
         * @param name The name of the certificate backend.
         * - When using a certificate `name` you should specify the `lb-id`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the certificate backend.
         * - When using a certificate `name` you should specify the `lb-id`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetLoadbalancerCertificateArgs build() {
            return $;
        }
    }

}
