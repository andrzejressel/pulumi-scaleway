// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.DatabasePrivilegeArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.DatabasePrivilegeState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Create and manage Scaleway RDB database privilege.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/rdb/api).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.DatabaseUser;
 * import com.pulumi.scaleway.DatabaseUserArgs;
 * import com.pulumi.scaleway.Database;
 * import com.pulumi.scaleway.DatabaseArgs;
 * import com.pulumi.scaleway.DatabasePrivilege;
 * import com.pulumi.scaleway.DatabasePrivilegeArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainDatabaseUser = new DatabaseUser(&#34;mainDatabaseUser&#34;, DatabaseUserArgs.builder()        
 *             .instanceId(scaleway_rdb_instance.pgsql().id())
 *             .password(&#34;thiZ_is_v&amp;ry_s3cret&#34;)
 *             .isAdmin(false)
 *             .build());
 * 
 *         var mainDatabase = new Database(&#34;mainDatabase&#34;, DatabaseArgs.builder()        
 *             .instanceId(scaleway_rdb_instance.pgsql().id())
 *             .build());
 * 
 *         var priv = new DatabasePrivilege(&#34;priv&#34;, DatabasePrivilegeArgs.builder()        
 *             .instanceId(scaleway_rdb_instance.rdb().id())
 *             .userName(&#34;my-db-user&#34;)
 *             .databaseName(&#34;my-db-name&#34;)
 *             .permission(&#34;all&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     mainDatabaseUser,
 *                     mainDatabase)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="scaleway:index/databasePrivilege:DatabasePrivilege")
public class DatabasePrivilege extends com.pulumi.resources.CustomResource {
    /**
     * Name of the database (e.g. `my-db-name`).
     * 
     */
    @Export(name="databaseName", type=String.class, parameters={})
    private Output<String> databaseName;

    /**
     * @return Name of the database (e.g. `my-db-name`).
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * UUID of the instance where to create the database.
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return UUID of the instance where to create the database.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * Permission to set. Valid values are `readonly`, `readwrite`, `all`, `custom` and `none`.
     * 
     */
    @Export(name="permission", type=String.class, parameters={})
    private Output<String> permission;

    /**
     * @return Permission to set. Valid values are `readonly`, `readwrite`, `all`, `custom` and `none`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }
    /**
     * Name of the user (e.g. `my-db-user`).
     * 
     */
    @Export(name="userName", type=String.class, parameters={})
    private Output<String> userName;

    /**
     * @return Name of the user (e.g. `my-db-user`).
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabasePrivilege(String name) {
        this(name, DatabasePrivilegeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabasePrivilege(String name, DatabasePrivilegeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabasePrivilege(String name, DatabasePrivilegeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/databasePrivilege:DatabasePrivilege", name, args == null ? DatabasePrivilegeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabasePrivilege(String name, Output<String> id, @Nullable DatabasePrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/databasePrivilege:DatabasePrivilege", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabasePrivilege get(String name, Output<String> id, @Nullable DatabasePrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabasePrivilege(name, id, state, options);
    }
}
