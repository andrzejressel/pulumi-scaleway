// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scaleway.inputs.BaremetalServerIpArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BaremetalServerState extends com.pulumi.resources.ResourceArgs {

    public static final BaremetalServerState Empty = new BaremetalServerState();

    /**
     * A description for the server.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the server.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The domain of the server.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain of the server.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The hostname of the server.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname of the server.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * (List of) The IPs of the server.
     * 
     */
    @Import(name="ips")
    private @Nullable Output<List<BaremetalServerIpArgs>> ips;

    /**
     * @return (List of) The IPs of the server.
     * 
     */
    public Optional<Output<List<BaremetalServerIpArgs>>> ips() {
        return Optional.ofNullable(this.ips);
    }

    /**
     * The name of the server.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the server.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The offer name or UUID of the baremetal server.
     * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
     * 
     */
    @Import(name="offer")
    private @Nullable Output<String> offer;

    /**
     * @return The offer name or UUID of the baremetal server.
     * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
     * 
     */
    public Optional<Output<String>> offer() {
        return Optional.ofNullable(this.offer);
    }

    /**
     * The ID of the offer.
     * 
     */
    @Import(name="offerId")
    private @Nullable Output<String> offerId;

    /**
     * @return The ID of the offer.
     * 
     */
    public Optional<Output<String>> offerId() {
        return Optional.ofNullable(this.offerId);
    }

    /**
     * The organization ID the server is associated with.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The organization ID the server is associated with.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * The UUID of the os to install on the server.
     * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
     * &gt; **Important:** Updates to `os` will reinstall the server.
     * 
     */
    @Import(name="os")
    private @Nullable Output<String> os;

    /**
     * @return The UUID of the os to install on the server.
     * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
     * &gt; **Important:** Updates to `os` will reinstall the server.
     * 
     */
    public Optional<Output<String>> os() {
        return Optional.ofNullable(this.os);
    }

    /**
     * The ID of the os.
     * 
     */
    @Import(name="osId")
    private @Nullable Output<String> osId;

    /**
     * @return The ID of the os.
     * 
     */
    public Optional<Output<String>> osId() {
        return Optional.ofNullable(this.osId);
    }

    /**
     * `project_id`) The ID of the project the server is associated with.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the server is associated with.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * List of SSH keys allowed to connect to the server.
     * &gt; **Important:** Updates to `ssh_key_ids` will reinstall the server.
     * 
     */
    @Import(name="sshKeyIds")
    private @Nullable Output<List<String>> sshKeyIds;

    /**
     * @return List of SSH keys allowed to connect to the server.
     * &gt; **Important:** Updates to `ssh_key_ids` will reinstall the server.
     * 
     */
    public Optional<Output<List<String>>> sshKeyIds() {
        return Optional.ofNullable(this.sshKeyIds);
    }

    /**
     * The tags associated with the server.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The tags associated with the server.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * `zone`) The zone in which the server should be created.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return `zone`) The zone in which the server should be created.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private BaremetalServerState() {}

    private BaremetalServerState(BaremetalServerState $) {
        this.description = $.description;
        this.domain = $.domain;
        this.hostname = $.hostname;
        this.ips = $.ips;
        this.name = $.name;
        this.offer = $.offer;
        this.offerId = $.offerId;
        this.organizationId = $.organizationId;
        this.os = $.os;
        this.osId = $.osId;
        this.projectId = $.projectId;
        this.sshKeyIds = $.sshKeyIds;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BaremetalServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BaremetalServerState $;

        public Builder() {
            $ = new BaremetalServerState();
        }

        public Builder(BaremetalServerState defaults) {
            $ = new BaremetalServerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description for the server.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the server.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domain The domain of the server.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain of the server.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param hostname The hostname of the server.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname of the server.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param ips (List of) The IPs of the server.
         * 
         * @return builder
         * 
         */
        public Builder ips(@Nullable Output<List<BaremetalServerIpArgs>> ips) {
            $.ips = ips;
            return this;
        }

        /**
         * @param ips (List of) The IPs of the server.
         * 
         * @return builder
         * 
         */
        public Builder ips(List<BaremetalServerIpArgs> ips) {
            return ips(Output.of(ips));
        }

        /**
         * @param ips (List of) The IPs of the server.
         * 
         * @return builder
         * 
         */
        public Builder ips(BaremetalServerIpArgs... ips) {
            return ips(List.of(ips));
        }

        /**
         * @param name The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the server.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param offer The offer name or UUID of the baremetal server.
         * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
         * 
         * @return builder
         * 
         */
        public Builder offer(@Nullable Output<String> offer) {
            $.offer = offer;
            return this;
        }

        /**
         * @param offer The offer name or UUID of the baremetal server.
         * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-334154) to find the right offer.
         * 
         * @return builder
         * 
         */
        public Builder offer(String offer) {
            return offer(Output.of(offer));
        }

        /**
         * @param offerId The ID of the offer.
         * 
         * @return builder
         * 
         */
        public Builder offerId(@Nullable Output<String> offerId) {
            $.offerId = offerId;
            return this;
        }

        /**
         * @param offerId The ID of the offer.
         * 
         * @return builder
         * 
         */
        public Builder offerId(String offerId) {
            return offerId(Output.of(offerId));
        }

        /**
         * @param organizationId The organization ID the server is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The organization ID the server is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param os The UUID of the os to install on the server.
         * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
         * &gt; **Important:** Updates to `os` will reinstall the server.
         * 
         * @return builder
         * 
         */
        public Builder os(@Nullable Output<String> os) {
            $.os = os;
            return this;
        }

        /**
         * @param os The UUID of the os to install on the server.
         * Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-87598a) to find the right OS ID.
         * &gt; **Important:** Updates to `os` will reinstall the server.
         * 
         * @return builder
         * 
         */
        public Builder os(String os) {
            return os(Output.of(os));
        }

        /**
         * @param osId The ID of the os.
         * 
         * @return builder
         * 
         */
        public Builder osId(@Nullable Output<String> osId) {
            $.osId = osId;
            return this;
        }

        /**
         * @param osId The ID of the os.
         * 
         * @return builder
         * 
         */
        public Builder osId(String osId) {
            return osId(Output.of(osId));
        }

        /**
         * @param projectId `project_id`) The ID of the project the server is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId `project_id`) The ID of the project the server is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param sshKeyIds List of SSH keys allowed to connect to the server.
         * &gt; **Important:** Updates to `ssh_key_ids` will reinstall the server.
         * 
         * @return builder
         * 
         */
        public Builder sshKeyIds(@Nullable Output<List<String>> sshKeyIds) {
            $.sshKeyIds = sshKeyIds;
            return this;
        }

        /**
         * @param sshKeyIds List of SSH keys allowed to connect to the server.
         * &gt; **Important:** Updates to `ssh_key_ids` will reinstall the server.
         * 
         * @return builder
         * 
         */
        public Builder sshKeyIds(List<String> sshKeyIds) {
            return sshKeyIds(Output.of(sshKeyIds));
        }

        /**
         * @param sshKeyIds List of SSH keys allowed to connect to the server.
         * &gt; **Important:** Updates to `ssh_key_ids` will reinstall the server.
         * 
         * @return builder
         * 
         */
        public Builder sshKeyIds(String... sshKeyIds) {
            return sshKeyIds(List.of(sshKeyIds));
        }

        /**
         * @param tags The tags associated with the server.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags associated with the server.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags associated with the server.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param zone `zone`) The zone in which the server should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone `zone`) The zone in which the server should be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public BaremetalServerState build() {
            return $;
        }
    }

}
