// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scaleway.inputs.DatabaseAclAclRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseAclArgs Empty = new DatabaseAclArgs();

    /**
     * A list of ACLs (structure is described below)
     * 
     */
    @Import(name="aclRules", required=true)
    private Output<List<DatabaseAclAclRuleArgs>> aclRules;

    /**
     * @return A list of ACLs (structure is described below)
     * 
     */
    public Output<List<DatabaseAclAclRuleArgs>> aclRules() {
        return this.aclRules;
    }

    /**
     * The instance on which to create the ACL.
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return The instance on which to create the ACL.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * The region you want to attach the resource to
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region you want to attach the resource to
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private DatabaseAclArgs() {}

    private DatabaseAclArgs(DatabaseAclArgs $) {
        this.aclRules = $.aclRules;
        this.instanceId = $.instanceId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseAclArgs $;

        public Builder() {
            $ = new DatabaseAclArgs();
        }

        public Builder(DatabaseAclArgs defaults) {
            $ = new DatabaseAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclRules A list of ACLs (structure is described below)
         * 
         * @return builder
         * 
         */
        public Builder aclRules(Output<List<DatabaseAclAclRuleArgs>> aclRules) {
            $.aclRules = aclRules;
            return this;
        }

        /**
         * @param aclRules A list of ACLs (structure is described below)
         * 
         * @return builder
         * 
         */
        public Builder aclRules(List<DatabaseAclAclRuleArgs> aclRules) {
            return aclRules(Output.of(aclRules));
        }

        /**
         * @param aclRules A list of ACLs (structure is described below)
         * 
         * @return builder
         * 
         */
        public Builder aclRules(DatabaseAclAclRuleArgs... aclRules) {
            return aclRules(List.of(aclRules));
        }

        /**
         * @param instanceId The instance on which to create the ACL.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The instance on which to create the ACL.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param region The region you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region you want to attach the resource to
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public DatabaseAclArgs build() {
            $.aclRules = Objects.requireNonNull($.aclRules, "expected parameter 'aclRules' to be non-null");
            $.instanceId = Objects.requireNonNull($.instanceId, "expected parameter 'instanceId' to be non-null");
            return $;
        }
    }

}
