// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scaleway.outputs.ObjectBucketLifecycleRuleExpiration;
import com.pulumi.scaleway.outputs.ObjectBucketLifecycleRuleTransition;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObjectBucketLifecycleRule {
    private @Nullable Integer abortIncompleteMultipartUploadDays;
    private Boolean enabled;
    private @Nullable ObjectBucketLifecycleRuleExpiration expiration;
    /**
     * @return The unique name of the bucket.
     * 
     */
    private @Nullable String id;
    private @Nullable String prefix;
    /**
     * @return A list of tags (key / value) for the bucket.
     * 
     */
    private @Nullable Map<String,String> tags;
    private @Nullable List<ObjectBucketLifecycleRuleTransition> transitions;

    private ObjectBucketLifecycleRule() {}
    public Optional<Integer> abortIncompleteMultipartUploadDays() {
        return Optional.ofNullable(this.abortIncompleteMultipartUploadDays);
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public Optional<ObjectBucketLifecycleRuleExpiration> expiration() {
        return Optional.ofNullable(this.expiration);
    }
    /**
     * @return The unique name of the bucket.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return A list of tags (key / value) for the bucket.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public List<ObjectBucketLifecycleRuleTransition> transitions() {
        return this.transitions == null ? List.of() : this.transitions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectBucketLifecycleRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer abortIncompleteMultipartUploadDays;
        private Boolean enabled;
        private @Nullable ObjectBucketLifecycleRuleExpiration expiration;
        private @Nullable String id;
        private @Nullable String prefix;
        private @Nullable Map<String,String> tags;
        private @Nullable List<ObjectBucketLifecycleRuleTransition> transitions;
        public Builder() {}
        public Builder(ObjectBucketLifecycleRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abortIncompleteMultipartUploadDays = defaults.abortIncompleteMultipartUploadDays;
    	      this.enabled = defaults.enabled;
    	      this.expiration = defaults.expiration;
    	      this.id = defaults.id;
    	      this.prefix = defaults.prefix;
    	      this.tags = defaults.tags;
    	      this.transitions = defaults.transitions;
        }

        @CustomType.Setter
        public Builder abortIncompleteMultipartUploadDays(@Nullable Integer abortIncompleteMultipartUploadDays) {
            this.abortIncompleteMultipartUploadDays = abortIncompleteMultipartUploadDays;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder expiration(@Nullable ObjectBucketLifecycleRuleExpiration expiration) {
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder transitions(@Nullable List<ObjectBucketLifecycleRuleTransition> transitions) {
            this.transitions = transitions;
            return this;
        }
        public Builder transitions(ObjectBucketLifecycleRuleTransition... transitions) {
            return transitions(List.of(transitions));
        }
        public ObjectBucketLifecycleRule build() {
            final var o = new ObjectBucketLifecycleRule();
            o.abortIncompleteMultipartUploadDays = abortIncompleteMultipartUploadDays;
            o.enabled = enabled;
            o.expiration = expiration;
            o.id = id;
            o.prefix = prefix;
            o.tags = tags;
            o.transitions = transitions;
            return o;
        }
    }
}
