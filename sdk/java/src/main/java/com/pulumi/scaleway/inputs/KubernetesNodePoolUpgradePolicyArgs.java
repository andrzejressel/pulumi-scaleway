// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesNodePoolUpgradePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesNodePoolUpgradePolicyArgs Empty = new KubernetesNodePoolUpgradePolicyArgs();

    /**
     * The maximum number of nodes to be created during the upgrade
     * 
     */
    @Import(name="maxSurge")
    private @Nullable Output<Integer> maxSurge;

    /**
     * @return The maximum number of nodes to be created during the upgrade
     * 
     */
    public Optional<Output<Integer>> maxSurge() {
        return Optional.ofNullable(this.maxSurge);
    }

    /**
     * The maximum number of nodes that can be not ready at the same time
     * 
     */
    @Import(name="maxUnavailable")
    private @Nullable Output<Integer> maxUnavailable;

    /**
     * @return The maximum number of nodes that can be not ready at the same time
     * 
     */
    public Optional<Output<Integer>> maxUnavailable() {
        return Optional.ofNullable(this.maxUnavailable);
    }

    private KubernetesNodePoolUpgradePolicyArgs() {}

    private KubernetesNodePoolUpgradePolicyArgs(KubernetesNodePoolUpgradePolicyArgs $) {
        this.maxSurge = $.maxSurge;
        this.maxUnavailable = $.maxUnavailable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesNodePoolUpgradePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesNodePoolUpgradePolicyArgs $;

        public Builder() {
            $ = new KubernetesNodePoolUpgradePolicyArgs();
        }

        public Builder(KubernetesNodePoolUpgradePolicyArgs defaults) {
            $ = new KubernetesNodePoolUpgradePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxSurge The maximum number of nodes to be created during the upgrade
         * 
         * @return builder
         * 
         */
        public Builder maxSurge(@Nullable Output<Integer> maxSurge) {
            $.maxSurge = maxSurge;
            return this;
        }

        /**
         * @param maxSurge The maximum number of nodes to be created during the upgrade
         * 
         * @return builder
         * 
         */
        public Builder maxSurge(Integer maxSurge) {
            return maxSurge(Output.of(maxSurge));
        }

        /**
         * @param maxUnavailable The maximum number of nodes that can be not ready at the same time
         * 
         * @return builder
         * 
         */
        public Builder maxUnavailable(@Nullable Output<Integer> maxUnavailable) {
            $.maxUnavailable = maxUnavailable;
            return this;
        }

        /**
         * @param maxUnavailable The maximum number of nodes that can be not ready at the same time
         * 
         * @return builder
         * 
         */
        public Builder maxUnavailable(Integer maxUnavailable) {
            return maxUnavailable(Output.of(maxUnavailable));
        }

        public KubernetesNodePoolUpgradePolicyArgs build() {
            return $;
        }
    }

}
