// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    public partial class LoadbalancerFrontendBeta : Pulumi.CustomResource
    {
        /// <summary>
        /// A list of ACL rules to apply to the load-balancer frontend.  Defined below.
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<Outputs.LoadbalancerFrontendBetaAcl>> Acls { get; private set; } = null!;

        /// <summary>
        /// The load-balancer backend ID this frontend is attached to.
        /// </summary>
        [Output("backendId")]
        public Output<string> BackendId { get; private set; } = null!;

        /// <summary>
        /// Certificate ID that should be used by the frontend.
        /// </summary>
        [Output("certificateId")]
        public Output<string?> CertificateId { get; private set; } = null!;

        /// <summary>
        /// TCP port to listen on the front side.
        /// </summary>
        [Output("inboundPort")]
        public Output<int> InboundPort { get; private set; } = null!;

        /// <summary>
        /// The load-balancer ID this frontend is attached to.
        /// </summary>
        [Output("lbId")]
        public Output<string> LbId { get; private set; } = null!;

        /// <summary>
        /// The ACL name. If not provided it will be randomly generated.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Maximum inactivity time on the client side. (e.g.: `1s`)
        /// </summary>
        [Output("timeoutClient")]
        public Output<string?> TimeoutClient { get; private set; } = null!;


        /// <summary>
        /// Create a LoadbalancerFrontendBeta resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadbalancerFrontendBeta(string name, LoadbalancerFrontendBetaArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/loadbalancerFrontendBeta:LoadbalancerFrontendBeta", name, args ?? new LoadbalancerFrontendBetaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadbalancerFrontendBeta(string name, Input<string> id, LoadbalancerFrontendBetaState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/loadbalancerFrontendBeta:LoadbalancerFrontendBeta", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadbalancerFrontendBeta resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadbalancerFrontendBeta Get(string name, Input<string> id, LoadbalancerFrontendBetaState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadbalancerFrontendBeta(name, id, state, options);
        }
    }

    public sealed class LoadbalancerFrontendBetaArgs : Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<Inputs.LoadbalancerFrontendBetaAclArgs>? _acls;

        /// <summary>
        /// A list of ACL rules to apply to the load-balancer frontend.  Defined below.
        /// </summary>
        public InputList<Inputs.LoadbalancerFrontendBetaAclArgs> Acls
        {
            get => _acls ?? (_acls = new InputList<Inputs.LoadbalancerFrontendBetaAclArgs>());
            set => _acls = value;
        }

        /// <summary>
        /// The load-balancer backend ID this frontend is attached to.
        /// </summary>
        [Input("backendId", required: true)]
        public Input<string> BackendId { get; set; } = null!;

        /// <summary>
        /// Certificate ID that should be used by the frontend.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// TCP port to listen on the front side.
        /// </summary>
        [Input("inboundPort", required: true)]
        public Input<int> InboundPort { get; set; } = null!;

        /// <summary>
        /// The load-balancer ID this frontend is attached to.
        /// </summary>
        [Input("lbId", required: true)]
        public Input<string> LbId { get; set; } = null!;

        /// <summary>
        /// The ACL name. If not provided it will be randomly generated.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Maximum inactivity time on the client side. (e.g.: `1s`)
        /// </summary>
        [Input("timeoutClient")]
        public Input<string>? TimeoutClient { get; set; }

        public LoadbalancerFrontendBetaArgs()
        {
        }
    }

    public sealed class LoadbalancerFrontendBetaState : Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<Inputs.LoadbalancerFrontendBetaAclGetArgs>? _acls;

        /// <summary>
        /// A list of ACL rules to apply to the load-balancer frontend.  Defined below.
        /// </summary>
        public InputList<Inputs.LoadbalancerFrontendBetaAclGetArgs> Acls
        {
            get => _acls ?? (_acls = new InputList<Inputs.LoadbalancerFrontendBetaAclGetArgs>());
            set => _acls = value;
        }

        /// <summary>
        /// The load-balancer backend ID this frontend is attached to.
        /// </summary>
        [Input("backendId")]
        public Input<string>? BackendId { get; set; }

        /// <summary>
        /// Certificate ID that should be used by the frontend.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// TCP port to listen on the front side.
        /// </summary>
        [Input("inboundPort")]
        public Input<int>? InboundPort { get; set; }

        /// <summary>
        /// The load-balancer ID this frontend is attached to.
        /// </summary>
        [Input("lbId")]
        public Input<string>? LbId { get; set; }

        /// <summary>
        /// The ACL name. If not provided it will be randomly generated.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Maximum inactivity time on the client side. (e.g.: `1s`)
        /// </summary>
        [Input("timeoutClient")]
        public Input<string>? TimeoutClient { get; set; }

        public LoadbalancerFrontendBetaState()
        {
        }
    }
}
