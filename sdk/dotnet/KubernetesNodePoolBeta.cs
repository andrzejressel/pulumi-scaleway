// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Kubernetes cluster pools. For more information, see [the documentation](https://developers.scaleway.com/en/products/k8s/api/).
    /// 
    /// ## Examples
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Scaleway = Pulumi.Scaleway;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var jack = new Scaleway.KubernetesClusterBeta("jack", new Scaleway.KubernetesClusterBetaArgs
    ///         {
    ///             Version = "1.18.0",
    ///             Cni = "cilium",
    ///         });
    ///         var bill = new Scaleway.KubernetesNodePoolBeta("bill", new Scaleway.KubernetesNodePoolBetaArgs
    ///         {
    ///             ClusterId = jack.Id,
    ///             NodeType = "GP1-S",
    ///             Size = 3,
    ///             MinSize = 0,
    ///             MaxSize = 10,
    ///             Autoscaling = true,
    ///             Autohealing = true,
    ///             ContainerRuntime = "docker",
    ///             PlacementGroupId = "1267e3fd-a51c-49ed-ad12-857092ee3a3d",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class KubernetesNodePoolBeta : Pulumi.CustomResource
    {
        /// <summary>
        /// Enables the autohealing feature for this pool.
        /// </summary>
        [Output("autohealing")]
        public Output<bool?> Autohealing { get; private set; } = null!;

        /// <summary>
        /// Enables the autoscaling feature for this pool.
        /// &gt; **Important:** When enabled, an update of the `size` will not be taken into account.
        /// </summary>
        [Output("autoscaling")]
        public Output<bool?> Autoscaling { get; private set; } = null!;

        /// <summary>
        /// The ID of the Kubernetes cluster on which this pool will be created.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The container runtime of the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Output("containerRuntime")]
        public Output<string?> ContainerRuntime { get; private set; } = null!;

        /// <summary>
        /// The creation date of the pool.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The actual size of the pool
        /// </summary>
        [Output("currentSize")]
        public Output<int> CurrentSize { get; private set; } = null!;

        /// <summary>
        /// The maximum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        /// <summary>
        /// The minimum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Output("minSize")]
        public Output<int?> MinSize { get; private set; } = null!;

        /// <summary>
        /// The name for the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The commercial type of the pool instances.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        /// <summary>
        /// (List of) The nodes in the default pool.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.KubernetesNodePoolBetaNode>> Nodes { get; private set; } = null!;

        /// <summary>
        /// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the nodes of the pool will be attached to.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Output("placementGroupId")]
        public Output<string?> PlacementGroupId { get; private set; } = null!;

        /// <summary>
        /// `region`) The region in which the pool should be created.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The size of the pool.
        /// &gt; **Important:** This field will only be used at creation if autoscaling is enabled.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The status of the node.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the pool.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The last update date of the pool.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The version of the pool.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// Whether to wait for the pool to be ready.
        /// </summary>
        [Output("waitForPoolReady")]
        public Output<bool?> WaitForPoolReady { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesNodePoolBeta resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesNodePoolBeta(string name, KubernetesNodePoolBetaArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/kubernetesNodePoolBeta:KubernetesNodePoolBeta", name, args ?? new KubernetesNodePoolBetaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesNodePoolBeta(string name, Input<string> id, KubernetesNodePoolBetaState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/kubernetesNodePoolBeta:KubernetesNodePoolBeta", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesNodePoolBeta resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesNodePoolBeta Get(string name, Input<string> id, KubernetesNodePoolBetaState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesNodePoolBeta(name, id, state, options);
        }
    }

    public sealed class KubernetesNodePoolBetaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables the autohealing feature for this pool.
        /// </summary>
        [Input("autohealing")]
        public Input<bool>? Autohealing { get; set; }

        /// <summary>
        /// Enables the autoscaling feature for this pool.
        /// &gt; **Important:** When enabled, an update of the `size` will not be taken into account.
        /// </summary>
        [Input("autoscaling")]
        public Input<bool>? Autoscaling { get; set; }

        /// <summary>
        /// The ID of the Kubernetes cluster on which this pool will be created.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The container runtime of the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("containerRuntime")]
        public Input<string>? ContainerRuntime { get; set; }

        /// <summary>
        /// The maximum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// The name for the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The commercial type of the pool instances.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("nodeType", required: true)]
        public Input<string> NodeType { get; set; } = null!;

        /// <summary>
        /// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the nodes of the pool will be attached to.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("placementGroupId")]
        public Input<string>? PlacementGroupId { get; set; }

        /// <summary>
        /// `region`) The region in which the pool should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The size of the pool.
        /// &gt; **Important:** This field will only be used at creation if autoscaling is enabled.
        /// </summary>
        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the pool.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Whether to wait for the pool to be ready.
        /// </summary>
        [Input("waitForPoolReady")]
        public Input<bool>? WaitForPoolReady { get; set; }

        public KubernetesNodePoolBetaArgs()
        {
        }
    }

    public sealed class KubernetesNodePoolBetaState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables the autohealing feature for this pool.
        /// </summary>
        [Input("autohealing")]
        public Input<bool>? Autohealing { get; set; }

        /// <summary>
        /// Enables the autoscaling feature for this pool.
        /// &gt; **Important:** When enabled, an update of the `size` will not be taken into account.
        /// </summary>
        [Input("autoscaling")]
        public Input<bool>? Autoscaling { get; set; }

        /// <summary>
        /// The ID of the Kubernetes cluster on which this pool will be created.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The container runtime of the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("containerRuntime")]
        public Input<string>? ContainerRuntime { get; set; }

        /// <summary>
        /// The creation date of the pool.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The actual size of the pool
        /// </summary>
        [Input("currentSize")]
        public Input<int>? CurrentSize { get; set; }

        /// <summary>
        /// The maximum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum size of the pool, used by the autoscaling feature.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// The name for the pool.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The commercial type of the pool instances.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("nodes")]
        private InputList<Inputs.KubernetesNodePoolBetaNodeGetArgs>? _nodes;

        /// <summary>
        /// (List of) The nodes in the default pool.
        /// </summary>
        public InputList<Inputs.KubernetesNodePoolBetaNodeGetArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.KubernetesNodePoolBetaNodeGetArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the nodes of the pool will be attached to.
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("placementGroupId")]
        public Input<string>? PlacementGroupId { get; set; }

        /// <summary>
        /// `region`) The region in which the pool should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The size of the pool.
        /// &gt; **Important:** This field will only be used at creation if autoscaling is enabled.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The status of the node.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the pool.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The last update date of the pool.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The version of the pool.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Whether to wait for the pool to be ready.
        /// </summary>
        [Input("waitForPoolReady")]
        public Input<bool>? WaitForPoolReady { get; set; }

        public KubernetesNodePoolBetaState()
        {
        }
    }
}
