// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Scaleway
{
    public static class GetDatabaseACL
    {
        /// <summary>
        /// Gets information about the RDB instance network Access Control List.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myAcl = Output.Create(Scaleway.GetDatabaseACL.InvokeAsync(new Scaleway.GetDatabaseACLArgs
        ///         {
        ///             InstanceId = "fr-par/11111111-1111-1111-1111-111111111111",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatabaseACLResult> InvokeAsync(GetDatabaseACLArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseACLResult>("scaleway:index/getDatabaseACL:getDatabaseACL", args ?? new GetDatabaseACLArgs(), options.WithVersion());

        /// <summary>
        /// Gets information about the RDB instance network Access Control List.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myAcl = Output.Create(Scaleway.GetDatabaseACL.InvokeAsync(new Scaleway.GetDatabaseACLArgs
        ///         {
        ///             InstanceId = "fr-par/11111111-1111-1111-1111-111111111111",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDatabaseACLResult> Invoke(GetDatabaseACLInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDatabaseACLResult>("scaleway:index/getDatabaseACL:getDatabaseACL", args ?? new GetDatabaseACLInvokeArgs(), options.WithVersion());
    }


    public sealed class GetDatabaseACLArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The RDB instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        public GetDatabaseACLArgs()
        {
        }
    }

    public sealed class GetDatabaseACLInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The RDB instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public GetDatabaseACLInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatabaseACLResult
    {
        /// <summary>
        /// A list of ACLs (structure is described below)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseACLAclRuleResult> AclRules;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Region;

        [OutputConstructor]
        private GetDatabaseACLResult(
            ImmutableArray<Outputs.GetDatabaseACLAclRuleResult> aclRules,

            string id,

            string instanceId,

            string region)
        {
            AclRules = aclRules;
            Id = id;
            InstanceId = instanceId;
            Region = region;
        }
    }
}
