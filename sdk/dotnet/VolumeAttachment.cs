// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    /// <summary>
    /// **DEPRECATED**: This resource is deprecated and will be removed in `v2.0+`.
    /// Please use `scaleway_instance_server.additional_volumes` instead.
    /// 
    /// This allows volumes to be attached to servers.
    /// 
    /// &gt; **Warning:** Attaching volumes requires the servers to be powered off. This will lead to downtime if the server is already in use.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Scaleway = Pulumi.Scaleway;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var testServer = new Scaleway.Server("testServer", new Scaleway.ServerArgs
    ///         {
    ///             Image = "aecaed73-51a5-4439-a127-6d8229847145",
    ///             Type = "C2S",
    ///         });
    ///         var testVolume = new Scaleway.Volume("testVolume", new Scaleway.VolumeArgs
    ///         {
    ///             SizeInGb = 20,
    ///             Type = "l_ssd",
    ///         });
    ///         var testVolumeAttachment = new Scaleway.VolumeAttachment("testVolumeAttachment", new Scaleway.VolumeAttachmentArgs
    ///         {
    ///             Server = testServer.Id,
    ///             Volume = testVolume.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class VolumeAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// id of the server
        /// </summary>
        [Output("server")]
        public Output<string> Server { get; private set; } = null!;

        /// <summary>
        /// id of the volume to be attached
        /// </summary>
        [Output("volume")]
        public Output<string> Volume { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeAttachment(string name, VolumeAttachmentArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/volumeAttachment:VolumeAttachment", name, args ?? new VolumeAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeAttachment(string name, Input<string> id, VolumeAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/volumeAttachment:VolumeAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeAttachment Get(string name, Input<string> id, VolumeAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new VolumeAttachment(name, id, state, options);
        }
    }

    public sealed class VolumeAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// id of the server
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// id of the volume to be attached
        /// </summary>
        [Input("volume", required: true)]
        public Input<string> Volume { get; set; } = null!;

        public VolumeAttachmentArgs()
        {
        }
    }

    public sealed class VolumeAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// id of the server
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        /// <summary>
        /// id of the volume to be attached
        /// </summary>
        [Input("volume")]
        public Input<string>? Volume { get; set; }

        public VolumeAttachmentState()
        {
        }
    }
}
