// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Scaleway
{
    public static class GetVpcPublicGatewayDHCP
    {
        /// <summary>
        /// Gets information about a public gateway DHCP.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = new Scaleway.VpcPublicGatewayDHCP("main", new Scaleway.VpcPublicGatewayDHCPArgs
        ///         {
        ///             Subnet = "192.168.0.0/24",
        ///         });
        ///         var dhcpById = Scaleway.GetVpcPublicGatewayDHCP.Invoke(new Scaleway.GetVpcPublicGatewayDHCPInvokeArgs
        ///         {
        ///             DhcpId = main.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpcPublicGatewayDHCPResult> InvokeAsync(GetVpcPublicGatewayDHCPArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcPublicGatewayDHCPResult>("scaleway:index/getVpcPublicGatewayDHCP:getVpcPublicGatewayDHCP", args ?? new GetVpcPublicGatewayDHCPArgs(), options.WithVersion());

        /// <summary>
        /// Gets information about a public gateway DHCP.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = new Scaleway.VpcPublicGatewayDHCP("main", new Scaleway.VpcPublicGatewayDHCPArgs
        ///         {
        ///             Subnet = "192.168.0.0/24",
        ///         });
        ///         var dhcpById = Scaleway.GetVpcPublicGatewayDHCP.Invoke(new Scaleway.GetVpcPublicGatewayDHCPInvokeArgs
        ///         {
        ///             DhcpId = main.Id,
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpcPublicGatewayDHCPResult> Invoke(GetVpcPublicGatewayDHCPInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVpcPublicGatewayDHCPResult>("scaleway:index/getVpcPublicGatewayDHCP:getVpcPublicGatewayDHCP", args ?? new GetVpcPublicGatewayDHCPInvokeArgs(), options.WithVersion());
    }


    public sealed class GetVpcPublicGatewayDHCPArgs : Pulumi.InvokeArgs
    {
        [Input("dhcpId", required: true)]
        public string DhcpId { get; set; } = null!;

        public GetVpcPublicGatewayDHCPArgs()
        {
        }
    }

    public sealed class GetVpcPublicGatewayDHCPInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("dhcpId", required: true)]
        public Input<string> DhcpId { get; set; } = null!;

        public GetVpcPublicGatewayDHCPInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVpcPublicGatewayDHCPResult
    {
        public readonly string Address;
        public readonly string CreatedAt;
        public readonly string DhcpId;
        public readonly string DnsLocalName;
        public readonly ImmutableArray<string> DnsSearches;
        public readonly ImmutableArray<string> DnsServerOverrides;
        public readonly bool EnableDynamic;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OrganizationId;
        public readonly string PoolHigh;
        public readonly string PoolLow;
        public readonly string ProjectId;
        public readonly bool PushDefaultRoute;
        public readonly bool PushDnsServer;
        public readonly int RebindTimer;
        public readonly int RenewTimer;
        public readonly string Subnet;
        public readonly string UpdatedAt;
        public readonly int ValidLifetime;
        public readonly string Zone;

        [OutputConstructor]
        private GetVpcPublicGatewayDHCPResult(
            string address,

            string createdAt,

            string dhcpId,

            string dnsLocalName,

            ImmutableArray<string> dnsSearches,

            ImmutableArray<string> dnsServerOverrides,

            bool enableDynamic,

            string id,

            string organizationId,

            string poolHigh,

            string poolLow,

            string projectId,

            bool pushDefaultRoute,

            bool pushDnsServer,

            int rebindTimer,

            int renewTimer,

            string subnet,

            string updatedAt,

            int validLifetime,

            string zone)
        {
            Address = address;
            CreatedAt = createdAt;
            DhcpId = dhcpId;
            DnsLocalName = dnsLocalName;
            DnsSearches = dnsSearches;
            DnsServerOverrides = dnsServerOverrides;
            EnableDynamic = enableDynamic;
            Id = id;
            OrganizationId = organizationId;
            PoolHigh = poolHigh;
            PoolLow = poolLow;
            ProjectId = projectId;
            PushDefaultRoute = pushDefaultRoute;
            PushDnsServer = pushDnsServer;
            RebindTimer = rebindTimer;
            RenewTimer = renewTimer;
            Subnet = subnet;
            UpdatedAt = updatedAt;
            ValidLifetime = validLifetime;
            Zone = zone;
        }
    }
}
