// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Container Registry. For more information see [the documentation](https://developers.scaleway.com/en/products/registry/api/).
    /// 
    /// ## Examples
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Scaleway = Pulumi.Scaleway;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var main = new Scaleway.RegistryNamespaceBeta("main", new Scaleway.RegistryNamespaceBetaArgs
    ///         {
    ///             Description = "Main container registry",
    ///             IsPublic = false,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Attibutes Reference
    /// 
    /// In addition to all arguments above, the following attibutes are exported:
    /// 
    /// - `id` - The ID of the namespace
    /// - `endpoint` - Endpoint reachable by docker.
    /// </summary>
    public partial class RegistryNamespaceBeta : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the container registry namespace.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The endpoint reachable by docker
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Whether or not the registry images stored in the namespace should be downloadable publicly (docker pull).
        /// </summary>
        [Output("isPublic")]
        public Output<bool?> IsPublic { get; private set; } = null!;

        /// <summary>
        /// The unique name of the container registry namespace.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// `organization_id`) The ID of the organization the registry is associated with.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// `region`). The region in which the container registry namespace should be created.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a RegistryNamespaceBeta resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegistryNamespaceBeta(string name, RegistryNamespaceBetaArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway:index/registryNamespaceBeta:RegistryNamespaceBeta", name, args ?? new RegistryNamespaceBetaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RegistryNamespaceBeta(string name, Input<string> id, RegistryNamespaceBetaState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/registryNamespaceBeta:RegistryNamespaceBeta", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegistryNamespaceBeta resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegistryNamespaceBeta Get(string name, Input<string> id, RegistryNamespaceBetaState? state = null, CustomResourceOptions? options = null)
        {
            return new RegistryNamespaceBeta(name, id, state, options);
        }
    }

    public sealed class RegistryNamespaceBetaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the container registry namespace.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether or not the registry images stored in the namespace should be downloadable publicly (docker pull).
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// The unique name of the container registry namespace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the organization the registry is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// `region`). The region in which the container registry namespace should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public RegistryNamespaceBetaArgs()
        {
        }
    }

    public sealed class RegistryNamespaceBetaState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the container registry namespace.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The endpoint reachable by docker
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Whether or not the registry images stored in the namespace should be downloadable publicly (docker pull).
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        /// <summary>
        /// The unique name of the container registry namespace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `organization_id`) The ID of the organization the registry is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// `region`). The region in which the container registry namespace should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public RegistryNamespaceBetaState()
        {
        }
    }
}
