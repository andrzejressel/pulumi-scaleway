// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterBetaDefaultPool
    {
        public readonly bool? Autohealing;
        public readonly bool? Autoscaling;
        public readonly string? ContainerRuntime;
        /// <summary>
        /// The creation date of the cluster.
        /// </summary>
        public readonly string? CreatedAt;
        public readonly int? MaxSize;
        public readonly int? MinSize;
        public readonly string NodeType;
        public readonly ImmutableArray<Outputs.KubernetesClusterBetaDefaultPoolNode> Nodes;
        public readonly string? PlacementGroupId;
        public readonly string? PoolId;
        public readonly int Size;
        /// <summary>
        /// The status of the Kubernetes cluster.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The tags associated with the Kubernetes cluster.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The last update date of the cluster.
        /// </summary>
        public readonly string? UpdatedAt;
        public readonly bool? WaitForPoolReady;

        [OutputConstructor]
        private KubernetesClusterBetaDefaultPool(
            bool? autohealing,

            bool? autoscaling,

            string? containerRuntime,

            string? createdAt,

            int? maxSize,

            int? minSize,

            string nodeType,

            ImmutableArray<Outputs.KubernetesClusterBetaDefaultPoolNode> nodes,

            string? placementGroupId,

            string? poolId,

            int size,

            string? status,

            ImmutableArray<string> tags,

            string? updatedAt,

            bool? waitForPoolReady)
        {
            Autohealing = autohealing;
            Autoscaling = autoscaling;
            ContainerRuntime = containerRuntime;
            CreatedAt = createdAt;
            MaxSize = maxSize;
            MinSize = minSize;
            NodeType = nodeType;
            Nodes = nodes;
            PlacementGroupId = placementGroupId;
            PoolId = poolId;
            Size = size;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            WaitForPoolReady = waitForPoolReady;
        }
    }
}
