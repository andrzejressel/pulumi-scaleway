// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseInstanceBeta extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseInstanceBeta resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseInstanceBetaState, opts?: pulumi.CustomResourceOptions): DatabaseInstanceBeta {
        return new DatabaseInstanceBeta(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/databaseInstanceBeta:DatabaseInstanceBeta';

    /**
     * Returns true if the given object is an instance of DatabaseInstanceBeta.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseInstanceBeta {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseInstanceBeta.__pulumiType;
    }

    /**
     * Certificate of the database instance.
     */
    public /*out*/ readonly certificate!: pulumi.Output<string>;
    /**
     * Disable automated backup for the database instance.
     */
    public readonly disableBackup!: pulumi.Output<boolean | undefined>;
    /**
     * The IP of the Database Instance.
     */
    public /*out*/ readonly endpointIp!: pulumi.Output<string>;
    /**
     * The port of the Database Instance.
     */
    public /*out*/ readonly endpointPort!: pulumi.Output<number>;
    /**
     * Database Instance's engine version (e.g. `PostgreSQL-11`).
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * Enable or disable high availability for the database instance.
     */
    public readonly isHaCluster!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Database Instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of database instance you want to create (e.g. `db-dev-s`).
     */
    public readonly nodeType!: pulumi.Output<string>;
    /**
     * `organizationId`) The ID of the organization the Database Instance is associated with.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Password for the first user of the database instance.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * List of read replicas of the database instance.
     */
    public /*out*/ readonly readReplicas!: pulumi.Output<outputs.DatabaseInstanceBetaReadReplica[]>;
    /**
     * `region`) The region in which the Database Instance should be created.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The tags associated with the Database Instance.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Identifier for the first user of the database instance.
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a DatabaseInstanceBeta resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseInstanceBetaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseInstanceBetaArgs | DatabaseInstanceBetaState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DatabaseInstanceBetaState | undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["disableBackup"] = state ? state.disableBackup : undefined;
            inputs["endpointIp"] = state ? state.endpointIp : undefined;
            inputs["endpointPort"] = state ? state.endpointPort : undefined;
            inputs["engine"] = state ? state.engine : undefined;
            inputs["isHaCluster"] = state ? state.isHaCluster : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nodeType"] = state ? state.nodeType : undefined;
            inputs["organizationId"] = state ? state.organizationId : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["readReplicas"] = state ? state.readReplicas : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as DatabaseInstanceBetaArgs | undefined;
            if (!args || args.engine === undefined) {
                throw new Error("Missing required property 'engine'");
            }
            if (!args || args.nodeType === undefined) {
                throw new Error("Missing required property 'nodeType'");
            }
            if (!args || args.password === undefined) {
                throw new Error("Missing required property 'password'");
            }
            if (!args || args.userName === undefined) {
                throw new Error("Missing required property 'userName'");
            }
            inputs["disableBackup"] = args ? args.disableBackup : undefined;
            inputs["engine"] = args ? args.engine : undefined;
            inputs["isHaCluster"] = args ? args.isHaCluster : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nodeType"] = args ? args.nodeType : undefined;
            inputs["organizationId"] = args ? args.organizationId : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userName"] = args ? args.userName : undefined;
            inputs["certificate"] = undefined /*out*/;
            inputs["endpointIp"] = undefined /*out*/;
            inputs["endpointPort"] = undefined /*out*/;
            inputs["readReplicas"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DatabaseInstanceBeta.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseInstanceBeta resources.
 */
export interface DatabaseInstanceBetaState {
    /**
     * Certificate of the database instance.
     */
    readonly certificate?: pulumi.Input<string>;
    /**
     * Disable automated backup for the database instance.
     */
    readonly disableBackup?: pulumi.Input<boolean>;
    /**
     * The IP of the Database Instance.
     */
    readonly endpointIp?: pulumi.Input<string>;
    /**
     * The port of the Database Instance.
     */
    readonly endpointPort?: pulumi.Input<number>;
    /**
     * Database Instance's engine version (e.g. `PostgreSQL-11`).
     */
    readonly engine?: pulumi.Input<string>;
    /**
     * Enable or disable high availability for the database instance.
     */
    readonly isHaCluster?: pulumi.Input<boolean>;
    /**
     * The name of the Database Instance.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The type of database instance you want to create (e.g. `db-dev-s`).
     */
    readonly nodeType?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the Database Instance is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * Password for the first user of the database instance.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * List of read replicas of the database instance.
     */
    readonly readReplicas?: pulumi.Input<pulumi.Input<inputs.DatabaseInstanceBetaReadReplica>[]>;
    /**
     * `region`) The region in which the Database Instance should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The tags associated with the Database Instance.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier for the first user of the database instance.
     */
    readonly userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseInstanceBeta resource.
 */
export interface DatabaseInstanceBetaArgs {
    /**
     * Disable automated backup for the database instance.
     */
    readonly disableBackup?: pulumi.Input<boolean>;
    /**
     * Database Instance's engine version (e.g. `PostgreSQL-11`).
     */
    readonly engine: pulumi.Input<string>;
    /**
     * Enable or disable high availability for the database instance.
     */
    readonly isHaCluster?: pulumi.Input<boolean>;
    /**
     * The name of the Database Instance.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The type of database instance you want to create (e.g. `db-dev-s`).
     */
    readonly nodeType: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the Database Instance is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * Password for the first user of the database instance.
     */
    readonly password: pulumi.Input<string>;
    /**
     * `region`) The region in which the Database Instance should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The tags associated with the Database Instance.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier for the first user of the database instance.
     */
    readonly userName: pulumi.Input<string>;
}
