// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LoadbalancerBeta extends pulumi.CustomResource {
    /**
     * Get an existing LoadbalancerBeta resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadbalancerBetaState, opts?: pulumi.CustomResourceOptions): LoadbalancerBeta {
        return new LoadbalancerBeta(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/loadbalancerBeta:LoadbalancerBeta';

    /**
     * Returns true if the given object is an instance of LoadbalancerBeta.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadbalancerBeta {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadbalancerBeta.__pulumiType;
    }

    /**
     * The load-balance public IP Address
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * The ID of the associated IP. See below.
     */
    public readonly ipId!: pulumi.Output<string>;
    /**
     * The name of the load-balancer.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * `organizationId`) The ID of the organization the load-balancer is associated with.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * `region`) The region in which the load-balancer should be created.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The tags associated with the load-balancers.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The type of the load-balancer.  For now only `LB-S` is available
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a LoadbalancerBeta resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadbalancerBetaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadbalancerBetaArgs | LoadbalancerBetaState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as LoadbalancerBetaState | undefined;
            inputs["ipAddress"] = state ? state.ipAddress : undefined;
            inputs["ipId"] = state ? state.ipId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["organizationId"] = state ? state.organizationId : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as LoadbalancerBetaArgs | undefined;
            if (!args || args.ipId === undefined) {
                throw new Error("Missing required property 'ipId'");
            }
            if (!args || args.type === undefined) {
                throw new Error("Missing required property 'type'");
            }
            inputs["ipId"] = args ? args.ipId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["organizationId"] = args ? args.organizationId : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["ipAddress"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(LoadbalancerBeta.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadbalancerBeta resources.
 */
export interface LoadbalancerBetaState {
    /**
     * The load-balance public IP Address
     */
    readonly ipAddress?: pulumi.Input<string>;
    /**
     * The ID of the associated IP. See below.
     */
    readonly ipId?: pulumi.Input<string>;
    /**
     * The name of the load-balancer.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the load-balancer is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the load-balancer should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The tags associated with the load-balancers.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the load-balancer.  For now only `LB-S` is available
     */
    readonly type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadbalancerBeta resource.
 */
export interface LoadbalancerBetaArgs {
    /**
     * The ID of the associated IP. See below.
     */
    readonly ipId: pulumi.Input<string>;
    /**
     * The name of the load-balancer.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the load-balancer is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the load-balancer should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The tags associated with the load-balancers.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the load-balancer.  For now only `LB-S` is available
     */
    readonly type: pulumi.Input<string>;
}
