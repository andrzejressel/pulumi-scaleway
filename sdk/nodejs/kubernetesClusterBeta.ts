// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesClusterBeta extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesClusterBeta resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesClusterBetaState, opts?: pulumi.CustomResourceOptions): KubernetesClusterBeta {
        return new KubernetesClusterBeta(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/kubernetesClusterBeta:KubernetesClusterBeta';

    /**
     * Returns true if the given object is an instance of KubernetesClusterBeta.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesClusterBeta {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesClusterBeta.__pulumiType;
    }

    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    public readonly admissionPlugins!: pulumi.Output<string[] | undefined>;
    /**
     * The URL of the Kubernetes API server.
     */
    public /*out*/ readonly apiserverUrl!: pulumi.Output<string>;
    /**
     * The auto upgrade configuration.
     */
    public readonly autoUpgrade!: pulumi.Output<outputs.KubernetesClusterBetaAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    public readonly autoscalerConfig!: pulumi.Output<outputs.KubernetesClusterBetaAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    public readonly cni!: pulumi.Output<string>;
    /**
     * The creation date of the cluster.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * See below.
     *
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    public readonly defaultPool!: pulumi.Output<outputs.KubernetesClusterBetaDefaultPool | undefined>;
    /**
     * A description for the Kubernetes cluster.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enables the [Kubernetes dashboard](https://github.com/kubernetes/dashboard) for the Kubernetes cluster.
     */
    public readonly enableDashboard!: pulumi.Output<boolean | undefined>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    public readonly featureGates!: pulumi.Output<string[] | undefined>;
    /**
     * The [ingress controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/) to be deployed on the Kubernetes cluster.
     */
    public readonly ingress!: pulumi.Output<string | undefined>;
    /**
     * The kubeconfig configuration file of the Kubernetes cluster
     */
    public /*out*/ readonly kubeconfig!: pulumi.Output<outputs.KubernetesClusterBetaKubeconfig>;
    /**
     * The name for the Kubernetes cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * `organizationId`) The ID of the organization the cluster is associated with.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The status of the Kubernetes cluster.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The last update date of the cluster.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Set to `true` if a newer Kubernetes version is available.
     */
    public /*out*/ readonly upgradeAvailable!: pulumi.Output<boolean>;
    /**
     * The version of the Kubernetes cluster.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * The DNS wildcard that points to all ready nodes.
     * - `kubeconfig`
     */
    public /*out*/ readonly wildcardDns!: pulumi.Output<string>;

    /**
     * Create a KubernetesClusterBeta resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubernetesClusterBetaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesClusterBetaArgs | KubernetesClusterBetaState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as KubernetesClusterBetaState | undefined;
            inputs["admissionPlugins"] = state ? state.admissionPlugins : undefined;
            inputs["apiserverUrl"] = state ? state.apiserverUrl : undefined;
            inputs["autoUpgrade"] = state ? state.autoUpgrade : undefined;
            inputs["autoscalerConfig"] = state ? state.autoscalerConfig : undefined;
            inputs["cni"] = state ? state.cni : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["defaultPool"] = state ? state.defaultPool : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enableDashboard"] = state ? state.enableDashboard : undefined;
            inputs["featureGates"] = state ? state.featureGates : undefined;
            inputs["ingress"] = state ? state.ingress : undefined;
            inputs["kubeconfig"] = state ? state.kubeconfig : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["organizationId"] = state ? state.organizationId : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["updatedAt"] = state ? state.updatedAt : undefined;
            inputs["upgradeAvailable"] = state ? state.upgradeAvailable : undefined;
            inputs["version"] = state ? state.version : undefined;
            inputs["wildcardDns"] = state ? state.wildcardDns : undefined;
        } else {
            const args = argsOrState as KubernetesClusterBetaArgs | undefined;
            if (!args || args.cni === undefined) {
                throw new Error("Missing required property 'cni'");
            }
            if (!args || args.version === undefined) {
                throw new Error("Missing required property 'version'");
            }
            inputs["admissionPlugins"] = args ? args.admissionPlugins : undefined;
            inputs["autoUpgrade"] = args ? args.autoUpgrade : undefined;
            inputs["autoscalerConfig"] = args ? args.autoscalerConfig : undefined;
            inputs["cni"] = args ? args.cni : undefined;
            inputs["defaultPool"] = args ? args.defaultPool : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableDashboard"] = args ? args.enableDashboard : undefined;
            inputs["featureGates"] = args ? args.featureGates : undefined;
            inputs["ingress"] = args ? args.ingress : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["organizationId"] = args ? args.organizationId : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["version"] = args ? args.version : undefined;
            inputs["apiserverUrl"] = undefined /*out*/;
            inputs["createdAt"] = undefined /*out*/;
            inputs["kubeconfig"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["updatedAt"] = undefined /*out*/;
            inputs["upgradeAvailable"] = undefined /*out*/;
            inputs["wildcardDns"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(KubernetesClusterBeta.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KubernetesClusterBeta resources.
 */
export interface KubernetesClusterBetaState {
    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    readonly admissionPlugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL of the Kubernetes API server.
     */
    readonly apiserverUrl?: pulumi.Input<string>;
    /**
     * The auto upgrade configuration.
     */
    readonly autoUpgrade?: pulumi.Input<inputs.KubernetesClusterBetaAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    readonly autoscalerConfig?: pulumi.Input<inputs.KubernetesClusterBetaAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    readonly cni?: pulumi.Input<string>;
    /**
     * The creation date of the cluster.
     */
    readonly createdAt?: pulumi.Input<string>;
    /**
     * See below.
     *
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    readonly defaultPool?: pulumi.Input<inputs.KubernetesClusterBetaDefaultPool>;
    /**
     * A description for the Kubernetes cluster.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Enables the [Kubernetes dashboard](https://github.com/kubernetes/dashboard) for the Kubernetes cluster.
     */
    readonly enableDashboard?: pulumi.Input<boolean>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    readonly featureGates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The [ingress controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/) to be deployed on the Kubernetes cluster.
     */
    readonly ingress?: pulumi.Input<string>;
    /**
     * The kubeconfig configuration file of the Kubernetes cluster
     */
    readonly kubeconfig?: pulumi.Input<inputs.KubernetesClusterBetaKubeconfig>;
    /**
     * The name for the Kubernetes cluster.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the cluster is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The status of the Kubernetes cluster.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The last update date of the cluster.
     */
    readonly updatedAt?: pulumi.Input<string>;
    /**
     * Set to `true` if a newer Kubernetes version is available.
     */
    readonly upgradeAvailable?: pulumi.Input<boolean>;
    /**
     * The version of the Kubernetes cluster.
     */
    readonly version?: pulumi.Input<string>;
    /**
     * The DNS wildcard that points to all ready nodes.
     * - `kubeconfig`
     */
    readonly wildcardDns?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KubernetesClusterBeta resource.
 */
export interface KubernetesClusterBetaArgs {
    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    readonly admissionPlugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The auto upgrade configuration.
     */
    readonly autoUpgrade?: pulumi.Input<inputs.KubernetesClusterBetaAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    readonly autoscalerConfig?: pulumi.Input<inputs.KubernetesClusterBetaAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    readonly cni: pulumi.Input<string>;
    /**
     * See below.
     *
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    readonly defaultPool?: pulumi.Input<inputs.KubernetesClusterBetaDefaultPool>;
    /**
     * A description for the Kubernetes cluster.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Enables the [Kubernetes dashboard](https://github.com/kubernetes/dashboard) for the Kubernetes cluster.
     */
    readonly enableDashboard?: pulumi.Input<boolean>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    readonly featureGates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The [ingress controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/) to be deployed on the Kubernetes cluster.
     */
    readonly ingress?: pulumi.Input<string>;
    /**
     * The name for the Kubernetes cluster.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the cluster is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The version of the Kubernetes cluster.
     */
    readonly version: pulumi.Input<string>;
}
