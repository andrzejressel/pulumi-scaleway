// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets information about an instance IP.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * // Get info by ID
 * const myIp = pulumi.output(scaleway.getInstanceIP({
 *     id: "fr-par-1/11111111-1111-1111-1111-111111111111",
 * }));
 * ```
 */
export function getInstanceIP(args?: GetInstanceIPArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceIPResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("scaleway:index/getInstanceIP:getInstanceIP", {
        "address": args.address,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceIP.
 */
export interface GetInstanceIPArgs {
    /**
     * The IPv4 address to retrieve
     * Only one of `address` and `id` should be specified.
     */
    address?: string;
    /**
     * The ID of the IP address to retrieve
     * Only one of `address` and `id` should be specified.
     */
    id?: string;
}

/**
 * A collection of values returned by getInstanceIP.
 */
export interface GetInstanceIPResult {
    /**
     * The IP address.
     */
    readonly address?: string;
    /**
     * The ID of the IP.
     */
    readonly id?: string;
    /**
     * The organization ID the IP is associated with.
     */
    readonly organizationId: string;
    readonly projectId: string;
    /**
     * The reverse dns attached to this IP
     */
    readonly reverse: string;
    readonly serverId: string;
    readonly zone: string;
}

export function getInstanceIPOutput(args?: GetInstanceIPOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceIPResult> {
    return pulumi.output(args).apply(a => getInstanceIP(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceIP.
 */
export interface GetInstanceIPOutputArgs {
    /**
     * The IPv4 address to retrieve
     * Only one of `address` and `id` should be specified.
     */
    address?: pulumi.Input<string>;
    /**
     * The ID of the IP address to retrieve
     * Only one of `address` and `id` should be specified.
     */
    id?: pulumi.Input<string>;
}
