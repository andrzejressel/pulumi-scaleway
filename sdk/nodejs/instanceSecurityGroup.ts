// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InstanceSecurityGroup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceSecurityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceSecurityGroupState, opts?: pulumi.CustomResourceOptions): InstanceSecurityGroup {
        return new InstanceSecurityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/instanceSecurityGroup:InstanceSecurityGroup';

    /**
     * Returns true if the given object is an instance of InstanceSecurityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceSecurityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceSecurityGroup.__pulumiType;
    }

    /**
     * The description of the security group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A boolean to specify whether to use instance_security_group_rules. If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
     */
    public readonly externalRules!: pulumi.Output<boolean | undefined>;
    /**
     * The default policy on incoming traffic. Possible values are: `accept` or `drop`.
     */
    public readonly inboundDefaultPolicy!: pulumi.Output<string | undefined>;
    /**
     * A list of inbound rule to add to the security group. (Structure is documented below.)
     */
    public readonly inboundRules!: pulumi.Output<outputs.InstanceSecurityGroupInboundRule[] | undefined>;
    /**
     * The name of the security group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * `organizationId`) The ID of the project the security group is associated with.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
     */
    public readonly outboundDefaultPolicy!: pulumi.Output<string | undefined>;
    /**
     * A list of outbound rule to add to the security group. (Structure is documented below.)
     */
    public readonly outboundRules!: pulumi.Output<outputs.InstanceSecurityGroupOutboundRule[] | undefined>;
    /**
     * A boolean to specify whether the security group should be stateful or not.
     */
    public readonly stateful!: pulumi.Output<boolean | undefined>;
    /**
     * `zone`) The zone in which the security group should be created.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InstanceSecurityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceSecurityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceSecurityGroupArgs | InstanceSecurityGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as InstanceSecurityGroupState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["externalRules"] = state ? state.externalRules : undefined;
            inputs["inboundDefaultPolicy"] = state ? state.inboundDefaultPolicy : undefined;
            inputs["inboundRules"] = state ? state.inboundRules : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["organizationId"] = state ? state.organizationId : undefined;
            inputs["outboundDefaultPolicy"] = state ? state.outboundDefaultPolicy : undefined;
            inputs["outboundRules"] = state ? state.outboundRules : undefined;
            inputs["stateful"] = state ? state.stateful : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InstanceSecurityGroupArgs | undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["externalRules"] = args ? args.externalRules : undefined;
            inputs["inboundDefaultPolicy"] = args ? args.inboundDefaultPolicy : undefined;
            inputs["inboundRules"] = args ? args.inboundRules : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["organizationId"] = args ? args.organizationId : undefined;
            inputs["outboundDefaultPolicy"] = args ? args.outboundDefaultPolicy : undefined;
            inputs["outboundRules"] = args ? args.outboundRules : undefined;
            inputs["stateful"] = args ? args.stateful : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(InstanceSecurityGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceSecurityGroup resources.
 */
export interface InstanceSecurityGroupState {
    /**
     * The description of the security group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A boolean to specify whether to use instance_security_group_rules. If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
     */
    readonly externalRules?: pulumi.Input<boolean>;
    /**
     * The default policy on incoming traffic. Possible values are: `accept` or `drop`.
     */
    readonly inboundDefaultPolicy?: pulumi.Input<string>;
    /**
     * A list of inbound rule to add to the security group. (Structure is documented below.)
     */
    readonly inboundRules?: pulumi.Input<pulumi.Input<inputs.InstanceSecurityGroupInboundRule>[]>;
    /**
     * The name of the security group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the project the security group is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
     */
    readonly outboundDefaultPolicy?: pulumi.Input<string>;
    /**
     * A list of outbound rule to add to the security group. (Structure is documented below.)
     */
    readonly outboundRules?: pulumi.Input<pulumi.Input<inputs.InstanceSecurityGroupOutboundRule>[]>;
    /**
     * A boolean to specify whether the security group should be stateful or not.
     */
    readonly stateful?: pulumi.Input<boolean>;
    /**
     * `zone`) The zone in which the security group should be created.
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceSecurityGroup resource.
 */
export interface InstanceSecurityGroupArgs {
    /**
     * The description of the security group.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A boolean to specify whether to use instance_security_group_rules. If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
     */
    readonly externalRules?: pulumi.Input<boolean>;
    /**
     * The default policy on incoming traffic. Possible values are: `accept` or `drop`.
     */
    readonly inboundDefaultPolicy?: pulumi.Input<string>;
    /**
     * A list of inbound rule to add to the security group. (Structure is documented below.)
     */
    readonly inboundRules?: pulumi.Input<pulumi.Input<inputs.InstanceSecurityGroupInboundRule>[]>;
    /**
     * The name of the security group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the project the security group is associated with.
     */
    readonly organizationId?: pulumi.Input<string>;
    /**
     * The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
     */
    readonly outboundDefaultPolicy?: pulumi.Input<string>;
    /**
     * A list of outbound rule to add to the security group. (Structure is documented below.)
     */
    readonly outboundRules?: pulumi.Input<pulumi.Input<inputs.InstanceSecurityGroupOutboundRule>[]>;
    /**
     * A boolean to specify whether the security group should be stateful or not.
     */
    readonly stateful?: pulumi.Input<boolean>;
    /**
     * `zone`) The zone in which the security group should be created.
     */
    readonly zone?: pulumi.Input<string>;
}
