// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates and manages Scaleway Compute Instance security group rules. For more information, see [the documentation](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89).
//
// This resource can be used to externalize rules from a `InstanceSecurityGroup` to solve circular dependency problems. When using this resource do not forget to set `externalRules = true` on the security group.
//
// > **Warning:** In order to guaranty rules order in a given security group only one InstanceSecurityGroupRules is allowed per security group.
//
// ## Examples
//
// ### Basic
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sg01, err := scaleway.NewInstanceSecurityGroup(ctx, "sg01", &scaleway.InstanceSecurityGroupArgs{
// 			ExternalRules: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = scaleway.NewInstanceSecurityGroupRules(ctx, "sgrs01", &scaleway.InstanceSecurityGroupRulesArgs{
// 			SecurityGroupId: sg01.ID(),
// 			InboundRules: scaleway.InstanceSecurityGroupRulesInboundRuleArray{
// 				&scaleway.InstanceSecurityGroupRulesInboundRuleArgs{
// 					Action:  pulumi.String("accept"),
// 					Port:    pulumi.Int(80),
// 					IpRange: pulumi.String("0.0.0.0/0"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type InstanceSecurityGroupRules struct {
	pulumi.CustomResourceState

	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayOutput `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewInstanceSecurityGroupRules registers a new resource with the given unique name, arguments, and options.
func NewInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, args *InstanceSecurityGroupRulesArgs, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	if args == nil || args.SecurityGroupId == nil {
		return nil, errors.New("missing required argument 'SecurityGroupId'")
	}
	if args == nil {
		args = &InstanceSecurityGroupRulesArgs{}
	}
	var resource InstanceSecurityGroupRules
	err := ctx.RegisterResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceSecurityGroupRules gets an existing InstanceSecurityGroupRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceSecurityGroupRulesState, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	var resource InstanceSecurityGroupRules
	err := ctx.ReadResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceSecurityGroupRules resources.
type instanceSecurityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
}

type InstanceSecurityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput
}

func (InstanceSecurityGroupRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesState)(nil)).Elem()
}

type instanceSecurityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a InstanceSecurityGroupRules resource.
type InstanceSecurityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput
}

func (InstanceSecurityGroupRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesArgs)(nil)).Elem()
}
