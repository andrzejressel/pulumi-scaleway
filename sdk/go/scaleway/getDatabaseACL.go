// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about the RDB instance network Access Control List.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := scaleway.LookupDatabaseACL(ctx, &GetDatabaseACLArgs{
// 			InstanceId: "fr-par/11111111-1111-1111-1111-111111111111",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupDatabaseACL(ctx *pulumi.Context, args *LookupDatabaseACLArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseACLResult, error) {
	var rv LookupDatabaseACLResult
	err := ctx.Invoke("scaleway:index/getDatabaseACL:getDatabaseACL", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseACL.
type LookupDatabaseACLArgs struct {
	// The RDB instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// A collection of values returned by getDatabaseACL.
type LookupDatabaseACLResult struct {
	// A list of ACLs (structure is described below)
	AclRules []GetDatabaseACLAclRule `pulumi:"aclRules"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Region     string `pulumi:"region"`
}

func LookupDatabaseACLOutput(ctx *pulumi.Context, args LookupDatabaseACLOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseACLResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseACLResult, error) {
			args := v.(LookupDatabaseACLArgs)
			r, err := LookupDatabaseACL(ctx, &args, opts...)
			return *r, err
		}).(LookupDatabaseACLResultOutput)
}

// A collection of arguments for invoking getDatabaseACL.
type LookupDatabaseACLOutputArgs struct {
	// The RDB instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (LookupDatabaseACLOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseACLArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseACL.
type LookupDatabaseACLResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseACLResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseACLResult)(nil)).Elem()
}

func (o LookupDatabaseACLResultOutput) ToLookupDatabaseACLResultOutput() LookupDatabaseACLResultOutput {
	return o
}

func (o LookupDatabaseACLResultOutput) ToLookupDatabaseACLResultOutputWithContext(ctx context.Context) LookupDatabaseACLResultOutput {
	return o
}

// A list of ACLs (structure is described below)
func (o LookupDatabaseACLResultOutput) AclRules() GetDatabaseACLAclRuleArrayOutput {
	return o.ApplyT(func(v LookupDatabaseACLResult) []GetDatabaseACLAclRule { return v.AclRules }).(GetDatabaseACLAclRuleArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatabaseACLResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseACLResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatabaseACLResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseACLResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupDatabaseACLResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseACLResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseACLResultOutput{})
}
