// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a Load Balancer IP.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "11111111-1111-1111-1111-111111111111"
// 		_, err := scaleway.LookupLoadbalancerIP(ctx, &GetLoadbalancerIPArgs{
// 			IpId: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupLoadbalancerIP(ctx *pulumi.Context, args *LookupLoadbalancerIPArgs, opts ...pulumi.InvokeOption) (*LookupLoadbalancerIPResult, error) {
	var rv LookupLoadbalancerIPResult
	err := ctx.Invoke("scaleway:index/getLoadbalancerIP:getLoadbalancerIP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadbalancerIP.
type LookupLoadbalancerIPArgs struct {
	// The IP address.
	// Only one of `ipAddress` and `lbId` should be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP ID.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpId *string `pulumi:"ipId"`
}

// A collection of values returned by getLoadbalancerIP.
type LookupLoadbalancerIPResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	IpId      *string `pulumi:"ipId"`
	// The associated load-balance ID if any
	LbId string `pulumi:"lbId"`
	// (Defaults to provider `organizationId`) The ID of the organization the LB IP is associated with.
	OrganizationId string `pulumi:"organizationId"`
	ProjectId      string `pulumi:"projectId"`
	Region         string `pulumi:"region"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	Zone    string `pulumi:"zone"`
}

func LookupLoadbalancerIPOutput(ctx *pulumi.Context, args LookupLoadbalancerIPOutputArgs, opts ...pulumi.InvokeOption) LookupLoadbalancerIPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadbalancerIPResult, error) {
			args := v.(LookupLoadbalancerIPArgs)
			r, err := LookupLoadbalancerIP(ctx, &args, opts...)
			return *r, err
		}).(LookupLoadbalancerIPResultOutput)
}

// A collection of arguments for invoking getLoadbalancerIP.
type LookupLoadbalancerIPOutputArgs struct {
	// The IP address.
	// Only one of `ipAddress` and `lbId` should be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP ID.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpId pulumi.StringPtrInput `pulumi:"ipId"`
}

func (LookupLoadbalancerIPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerIPArgs)(nil)).Elem()
}

// A collection of values returned by getLoadbalancerIP.
type LookupLoadbalancerIPResultOutput struct{ *pulumi.OutputState }

func (LookupLoadbalancerIPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerIPResult)(nil)).Elem()
}

func (o LookupLoadbalancerIPResultOutput) ToLookupLoadbalancerIPResultOutput() LookupLoadbalancerIPResultOutput {
	return o
}

func (o LookupLoadbalancerIPResultOutput) ToLookupLoadbalancerIPResultOutputWithContext(ctx context.Context) LookupLoadbalancerIPResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadbalancerIPResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIPResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LookupLoadbalancerIPResultOutput) IpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) *string { return v.IpId }).(pulumi.StringPtrOutput)
}

// The associated load-balance ID if any
func (o LookupLoadbalancerIPResultOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.LbId }).(pulumi.StringOutput)
}

// (Defaults to provider `organizationId`) The ID of the organization the LB IP is associated with.
func (o LookupLoadbalancerIPResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIPResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIPResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.Region }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o LookupLoadbalancerIPResultOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.Reverse }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIPResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIPResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadbalancerIPResultOutput{})
}
