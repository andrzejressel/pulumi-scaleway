// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LoadbalancerIPBeta struct {
	pulumi.CustomResourceState

	// The IP Address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The associated load-balance ID if any
	LbId pulumi.StringOutput `pulumi:"lbId"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region pulumi.StringOutput `pulumi:"region"`
	// The reverse domain associated with this IP.
	Reverse pulumi.StringOutput `pulumi:"reverse"`
}

// NewLoadbalancerIPBeta registers a new resource with the given unique name, arguments, and options.
func NewLoadbalancerIPBeta(ctx *pulumi.Context,
	name string, args *LoadbalancerIPBetaArgs, opts ...pulumi.ResourceOption) (*LoadbalancerIPBeta, error) {
	if args == nil {
		args = &LoadbalancerIPBetaArgs{}
	}
	var resource LoadbalancerIPBeta
	err := ctx.RegisterResource("scaleway:index/loadbalancerIPBeta:LoadbalancerIPBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadbalancerIPBeta gets an existing LoadbalancerIPBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadbalancerIPBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadbalancerIPBetaState, opts ...pulumi.ResourceOption) (*LoadbalancerIPBeta, error) {
	var resource LoadbalancerIPBeta
	err := ctx.ReadResource("scaleway:index/loadbalancerIPBeta:LoadbalancerIPBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadbalancerIPBeta resources.
type loadbalancerIPBetaState struct {
	// The IP Address
	IpAddress *string `pulumi:"ipAddress"`
	// The associated load-balance ID if any
	LbId *string `pulumi:"lbId"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The reverse domain associated with this IP.
	Reverse *string `pulumi:"reverse"`
}

type LoadbalancerIPBetaState struct {
	// The IP Address
	IpAddress pulumi.StringPtrInput
	// The associated load-balance ID if any
	LbId pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The reverse domain associated with this IP.
	Reverse pulumi.StringPtrInput
}

func (LoadbalancerIPBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadbalancerIPBetaState)(nil)).Elem()
}

type loadbalancerIPBetaArgs struct {
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The reverse domain associated with this IP.
	Reverse *string `pulumi:"reverse"`
}

// The set of arguments for constructing a LoadbalancerIPBeta resource.
type LoadbalancerIPBetaArgs struct {
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The reverse domain associated with this IP.
	Reverse pulumi.StringPtrInput
}

func (LoadbalancerIPBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadbalancerIPBetaArgs)(nil)).Elem()
}
