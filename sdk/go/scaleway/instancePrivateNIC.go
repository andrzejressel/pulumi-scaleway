// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Scaleway Instance Private NICs. For more information, see
// [the documentation](https://developers.scaleway.com/en/products/instance/api/#private-nics-a42eea).
//
// ## Example
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := scaleway.NewInstancePrivateNIC(ctx, "pnic01", &scaleway.InstancePrivateNICArgs{
// 			PrivateNetworkId: pulumi.String("fr-par-1/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
// 			ServerId:         pulumi.String("fr-par-1/11111111-1111-1111-1111-111111111111"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Private NICs can be imported using the `{zone}/{server_id}/{private_nic_id}`, e.g. bash
//
// ```sh
//  $ pulumi import scaleway:index/instancePrivateNIC:InstancePrivateNIC server_volume fr-par-1/11111111-1111-1111-1111-111111111111/22222222-2222-2222-2222-222222222222
// ```
type InstancePrivateNIC struct {
	pulumi.CustomResourceState

	// MAC address of the NIC
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	// The ID of the private network attached to.
	PrivateNetworkId pulumi.StringOutput `pulumi:"privateNetworkId"`
	// The ID of the server associated with.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
	// The zone you want to attach the resource to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstancePrivateNIC registers a new resource with the given unique name, arguments, and options.
func NewInstancePrivateNIC(ctx *pulumi.Context,
	name string, args *InstancePrivateNICArgs, opts ...pulumi.ResourceOption) (*InstancePrivateNIC, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrivateNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateNetworkId'")
	}
	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	var resource InstancePrivateNIC
	err := ctx.RegisterResource("scaleway:index/instancePrivateNIC:InstancePrivateNIC", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstancePrivateNIC gets an existing InstancePrivateNIC resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstancePrivateNIC(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstancePrivateNICState, opts ...pulumi.ResourceOption) (*InstancePrivateNIC, error) {
	var resource InstancePrivateNIC
	err := ctx.ReadResource("scaleway:index/instancePrivateNIC:InstancePrivateNIC", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstancePrivateNIC resources.
type instancePrivateNICState struct {
	// MAC address of the NIC
	MacAddress *string `pulumi:"macAddress"`
	// The ID of the private network attached to.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// The ID of the server associated with.
	ServerId *string `pulumi:"serverId"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

type InstancePrivateNICState struct {
	// MAC address of the NIC
	MacAddress pulumi.StringPtrInput
	// The ID of the private network attached to.
	PrivateNetworkId pulumi.StringPtrInput
	// The ID of the server associated with.
	ServerId pulumi.StringPtrInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (InstancePrivateNICState) ElementType() reflect.Type {
	return reflect.TypeOf((*instancePrivateNICState)(nil)).Elem()
}

type instancePrivateNICArgs struct {
	// The ID of the private network attached to.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// The ID of the server associated with.
	ServerId string `pulumi:"serverId"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a InstancePrivateNIC resource.
type InstancePrivateNICArgs struct {
	// The ID of the private network attached to.
	PrivateNetworkId pulumi.StringInput
	// The ID of the server associated with.
	ServerId pulumi.StringInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (InstancePrivateNICArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instancePrivateNICArgs)(nil)).Elem()
}

type InstancePrivateNICInput interface {
	pulumi.Input

	ToInstancePrivateNICOutput() InstancePrivateNICOutput
	ToInstancePrivateNICOutputWithContext(ctx context.Context) InstancePrivateNICOutput
}

func (*InstancePrivateNIC) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateNIC)(nil)).Elem()
}

func (i *InstancePrivateNIC) ToInstancePrivateNICOutput() InstancePrivateNICOutput {
	return i.ToInstancePrivateNICOutputWithContext(context.Background())
}

func (i *InstancePrivateNIC) ToInstancePrivateNICOutputWithContext(ctx context.Context) InstancePrivateNICOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateNICOutput)
}

type InstancePrivateNICOutput struct{ *pulumi.OutputState }

func (InstancePrivateNICOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateNIC)(nil)).Elem()
}

func (o InstancePrivateNICOutput) ToInstancePrivateNICOutput() InstancePrivateNICOutput {
	return o
}

func (o InstancePrivateNICOutput) ToInstancePrivateNICOutputWithContext(ctx context.Context) InstancePrivateNICOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateNICInput)(nil)).Elem(), &InstancePrivateNIC{})
	pulumi.RegisterOutputType(InstancePrivateNICOutput{})
}
