// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// **DEPRECATED**: This resource is deprecated and will be removed in `v2.0+`.
//
// Use this data source to get the ID of a registered Bootscript for use with the
// `Server` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "arm"
// 		opt1 := "Rescue"
// 		_, err := scaleway.GetBootscript(ctx, &scaleway.GetBootscriptArgs{
// 			Architecture: &opt0,
// 			NameFilter:   &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetBootscript(ctx *pulumi.Context, args *GetBootscriptArgs, opts ...pulumi.InvokeOption) (*GetBootscriptResult, error) {
	var rv GetBootscriptResult
	err := ctx.Invoke("scaleway:index/getBootscript:getBootscript", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBootscript.
type GetBootscriptArgs struct {
	// any supported Scaleway architecture, e.g. `x8664`, `arm`
	Architecture *string `pulumi:"architecture"`
	// Exact name of desired Bootscript
	Name *string `pulumi:"name"`
	// Regexp to match Bootscript name by
	NameFilter *string `pulumi:"nameFilter"`
}

// A collection of values returned by getBootscript.
type GetBootscriptResult struct {
	// architecture of the Bootscript, e.g. `arm` or `x8664`
	Architecture string `pulumi:"architecture"`
	// command line arguments used for booting
	BootCmdArgs string `pulumi:"bootCmdArgs"`
	// path to Device Tree Blob detailing hardware information
	Dtb string `pulumi:"dtb"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// URL to initial ramdisk content
	Initrd string `pulumi:"initrd"`
	// URL to used kernel
	Kernel     string  `pulumi:"kernel"`
	Name       *string `pulumi:"name"`
	NameFilter *string `pulumi:"nameFilter"`
	// uuid of the organization owning this Bootscript
	Organization string `pulumi:"organization"`
	// is this a public bootscript
	Public bool `pulumi:"public"`
}
