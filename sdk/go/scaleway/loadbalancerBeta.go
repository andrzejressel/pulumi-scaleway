// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LoadbalancerBeta struct {
	pulumi.CustomResourceState

	// The load-balance public IP Address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The ID of the associated IP. See below.
	IpId pulumi.StringOutput `pulumi:"ipId"`
	// The name of the load-balancer.
	Name pulumi.StringOutput `pulumi:"name"`
	// `organizationId`) The ID of the organization the load-balancer is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// `region`) The region in which the load-balancer should be created.
	Region pulumi.StringOutput `pulumi:"region"`
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The type of the load-balancer.  For now only `LB-S` is available
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLoadbalancerBeta registers a new resource with the given unique name, arguments, and options.
func NewLoadbalancerBeta(ctx *pulumi.Context,
	name string, args *LoadbalancerBetaArgs, opts ...pulumi.ResourceOption) (*LoadbalancerBeta, error) {
	if args == nil || args.IpId == nil {
		return nil, errors.New("missing required argument 'IpId'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &LoadbalancerBetaArgs{}
	}
	var resource LoadbalancerBeta
	err := ctx.RegisterResource("scaleway:index/loadbalancerBeta:LoadbalancerBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadbalancerBeta gets an existing LoadbalancerBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadbalancerBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadbalancerBetaState, opts ...pulumi.ResourceOption) (*LoadbalancerBeta, error) {
	var resource LoadbalancerBeta
	err := ctx.ReadResource("scaleway:index/loadbalancerBeta:LoadbalancerBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadbalancerBeta resources.
type loadbalancerBetaState struct {
	// The load-balance public IP Address
	IpAddress *string `pulumi:"ipAddress"`
	// The ID of the associated IP. See below.
	IpId *string `pulumi:"ipId"`
	// The name of the load-balancer.
	Name *string `pulumi:"name"`
	// `organizationId`) The ID of the organization the load-balancer is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// `region`) The region in which the load-balancer should be created.
	Region *string `pulumi:"region"`
	// The tags associated with the load-balancers.
	Tags []string `pulumi:"tags"`
	// The type of the load-balancer.  For now only `LB-S` is available
	Type *string `pulumi:"type"`
}

type LoadbalancerBetaState struct {
	// The load-balance public IP Address
	IpAddress pulumi.StringPtrInput
	// The ID of the associated IP. See below.
	IpId pulumi.StringPtrInput
	// The name of the load-balancer.
	Name pulumi.StringPtrInput
	// `organizationId`) The ID of the organization the load-balancer is associated with.
	OrganizationId pulumi.StringPtrInput
	// `region`) The region in which the load-balancer should be created.
	Region pulumi.StringPtrInput
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayInput
	// The type of the load-balancer.  For now only `LB-S` is available
	Type pulumi.StringPtrInput
}

func (LoadbalancerBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadbalancerBetaState)(nil)).Elem()
}

type loadbalancerBetaArgs struct {
	// The ID of the associated IP. See below.
	IpId string `pulumi:"ipId"`
	// The name of the load-balancer.
	Name *string `pulumi:"name"`
	// `organizationId`) The ID of the organization the load-balancer is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// `region`) The region in which the load-balancer should be created.
	Region *string `pulumi:"region"`
	// The tags associated with the load-balancers.
	Tags []string `pulumi:"tags"`
	// The type of the load-balancer.  For now only `LB-S` is available
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a LoadbalancerBeta resource.
type LoadbalancerBetaArgs struct {
	// The ID of the associated IP. See below.
	IpId pulumi.StringInput
	// The name of the load-balancer.
	Name pulumi.StringPtrInput
	// `organizationId`) The ID of the organization the load-balancer is associated with.
	OrganizationId pulumi.StringPtrInput
	// `region`) The region in which the load-balancer should be created.
	Region pulumi.StringPtrInput
	// The tags associated with the load-balancers.
	Tags pulumi.StringArrayInput
	// The type of the load-balancer.  For now only `LB-S` is available
	Type pulumi.StringInput
}

func (LoadbalancerBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadbalancerBetaArgs)(nil)).Elem()
}
