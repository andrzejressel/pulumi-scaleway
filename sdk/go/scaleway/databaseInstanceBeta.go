// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DatabaseInstanceBeta struct {
	pulumi.CustomResourceState

	// Certificate of the database instance.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// Disable automated backup for the database instance.
	DisableBackup pulumi.BoolPtrOutput `pulumi:"disableBackup"`
	// The IP of the Database Instance.
	EndpointIp pulumi.StringOutput `pulumi:"endpointIp"`
	// The port of the Database Instance.
	EndpointPort pulumi.IntOutput `pulumi:"endpointPort"`
	// Database Instance's engine version (e.g. `PostgreSQL-11`).
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Enable or disable high availability for the database instance.
	IsHaCluster pulumi.BoolPtrOutput `pulumi:"isHaCluster"`
	// The name of the Database Instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of database instance you want to create (e.g. `db-dev-s`).
	NodeType pulumi.StringOutput `pulumi:"nodeType"`
	// `organizationId`) The ID of the organization the Database Instance is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Password for the first user of the database instance.
	Password pulumi.StringOutput `pulumi:"password"`
	// List of read replicas of the database instance.
	ReadReplicas DatabaseInstanceBetaReadReplicaArrayOutput `pulumi:"readReplicas"`
	// `region`) The region in which the Database Instance should be created.
	Region pulumi.StringOutput `pulumi:"region"`
	// The tags associated with the Database Instance.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Identifier for the first user of the database instance.
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewDatabaseInstanceBeta registers a new resource with the given unique name, arguments, and options.
func NewDatabaseInstanceBeta(ctx *pulumi.Context,
	name string, args *DatabaseInstanceBetaArgs, opts ...pulumi.ResourceOption) (*DatabaseInstanceBeta, error) {
	if args == nil || args.Engine == nil {
		return nil, errors.New("missing required argument 'Engine'")
	}
	if args == nil || args.NodeType == nil {
		return nil, errors.New("missing required argument 'NodeType'")
	}
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.UserName == nil {
		return nil, errors.New("missing required argument 'UserName'")
	}
	if args == nil {
		args = &DatabaseInstanceBetaArgs{}
	}
	var resource DatabaseInstanceBeta
	err := ctx.RegisterResource("scaleway:index/databaseInstanceBeta:DatabaseInstanceBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseInstanceBeta gets an existing DatabaseInstanceBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseInstanceBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseInstanceBetaState, opts ...pulumi.ResourceOption) (*DatabaseInstanceBeta, error) {
	var resource DatabaseInstanceBeta
	err := ctx.ReadResource("scaleway:index/databaseInstanceBeta:DatabaseInstanceBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseInstanceBeta resources.
type databaseInstanceBetaState struct {
	// Certificate of the database instance.
	Certificate *string `pulumi:"certificate"`
	// Disable automated backup for the database instance.
	DisableBackup *bool `pulumi:"disableBackup"`
	// The IP of the Database Instance.
	EndpointIp *string `pulumi:"endpointIp"`
	// The port of the Database Instance.
	EndpointPort *int `pulumi:"endpointPort"`
	// Database Instance's engine version (e.g. `PostgreSQL-11`).
	Engine *string `pulumi:"engine"`
	// Enable or disable high availability for the database instance.
	IsHaCluster *bool `pulumi:"isHaCluster"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// The type of database instance you want to create (e.g. `db-dev-s`).
	NodeType *string `pulumi:"nodeType"`
	// `organizationId`) The ID of the organization the Database Instance is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// Password for the first user of the database instance.
	Password *string `pulumi:"password"`
	// List of read replicas of the database instance.
	ReadReplicas []DatabaseInstanceBetaReadReplica `pulumi:"readReplicas"`
	// `region`) The region in which the Database Instance should be created.
	Region *string `pulumi:"region"`
	// The tags associated with the Database Instance.
	Tags []string `pulumi:"tags"`
	// Identifier for the first user of the database instance.
	UserName *string `pulumi:"userName"`
}

type DatabaseInstanceBetaState struct {
	// Certificate of the database instance.
	Certificate pulumi.StringPtrInput
	// Disable automated backup for the database instance.
	DisableBackup pulumi.BoolPtrInput
	// The IP of the Database Instance.
	EndpointIp pulumi.StringPtrInput
	// The port of the Database Instance.
	EndpointPort pulumi.IntPtrInput
	// Database Instance's engine version (e.g. `PostgreSQL-11`).
	Engine pulumi.StringPtrInput
	// Enable or disable high availability for the database instance.
	IsHaCluster pulumi.BoolPtrInput
	// The name of the Database Instance.
	Name pulumi.StringPtrInput
	// The type of database instance you want to create (e.g. `db-dev-s`).
	NodeType pulumi.StringPtrInput
	// `organizationId`) The ID of the organization the Database Instance is associated with.
	OrganizationId pulumi.StringPtrInput
	// Password for the first user of the database instance.
	Password pulumi.StringPtrInput
	// List of read replicas of the database instance.
	ReadReplicas DatabaseInstanceBetaReadReplicaArrayInput
	// `region`) The region in which the Database Instance should be created.
	Region pulumi.StringPtrInput
	// The tags associated with the Database Instance.
	Tags pulumi.StringArrayInput
	// Identifier for the first user of the database instance.
	UserName pulumi.StringPtrInput
}

func (DatabaseInstanceBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseInstanceBetaState)(nil)).Elem()
}

type databaseInstanceBetaArgs struct {
	// Disable automated backup for the database instance.
	DisableBackup *bool `pulumi:"disableBackup"`
	// Database Instance's engine version (e.g. `PostgreSQL-11`).
	Engine string `pulumi:"engine"`
	// Enable or disable high availability for the database instance.
	IsHaCluster *bool `pulumi:"isHaCluster"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// The type of database instance you want to create (e.g. `db-dev-s`).
	NodeType string `pulumi:"nodeType"`
	// `organizationId`) The ID of the organization the Database Instance is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// Password for the first user of the database instance.
	Password string `pulumi:"password"`
	// `region`) The region in which the Database Instance should be created.
	Region *string `pulumi:"region"`
	// The tags associated with the Database Instance.
	Tags []string `pulumi:"tags"`
	// Identifier for the first user of the database instance.
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a DatabaseInstanceBeta resource.
type DatabaseInstanceBetaArgs struct {
	// Disable automated backup for the database instance.
	DisableBackup pulumi.BoolPtrInput
	// Database Instance's engine version (e.g. `PostgreSQL-11`).
	Engine pulumi.StringInput
	// Enable or disable high availability for the database instance.
	IsHaCluster pulumi.BoolPtrInput
	// The name of the Database Instance.
	Name pulumi.StringPtrInput
	// The type of database instance you want to create (e.g. `db-dev-s`).
	NodeType pulumi.StringInput
	// `organizationId`) The ID of the organization the Database Instance is associated with.
	OrganizationId pulumi.StringPtrInput
	// Password for the first user of the database instance.
	Password pulumi.StringInput
	// `region`) The region in which the Database Instance should be created.
	Region pulumi.StringPtrInput
	// The tags associated with the Database Instance.
	Tags pulumi.StringArrayInput
	// Identifier for the first user of the database instance.
	UserName pulumi.StringInput
}

func (DatabaseInstanceBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseInstanceBetaArgs)(nil)).Elem()
}
