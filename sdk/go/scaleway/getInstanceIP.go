// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an instance IP.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "fr-par-1/11111111-1111-1111-1111-111111111111"
// 		_, err := scaleway.LookupInstanceIP(ctx, &GetInstanceIPArgs{
// 			Id: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupInstanceIP(ctx *pulumi.Context, args *LookupInstanceIPArgs, opts ...pulumi.InvokeOption) (*LookupInstanceIPResult, error) {
	var rv LookupInstanceIPResult
	err := ctx.Invoke("scaleway:index/getInstanceIP:getInstanceIP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceIP.
type LookupInstanceIPArgs struct {
	// The IPv4 address to retrieve
	// Only one of `address` and `id` should be specified.
	Address *string `pulumi:"address"`
	// The ID of the IP address to retrieve
	// Only one of `address` and `id` should be specified.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getInstanceIP.
type LookupInstanceIPResult struct {
	// The IP address.
	Address *string `pulumi:"address"`
	// The ID of the IP.
	Id *string `pulumi:"id"`
	// The organization ID the IP is associated with.
	OrganizationId string `pulumi:"organizationId"`
	ProjectId      string `pulumi:"projectId"`
	// The reverse dns attached to this IP
	Reverse  string `pulumi:"reverse"`
	ServerId string `pulumi:"serverId"`
	Zone     string `pulumi:"zone"`
}

func LookupInstanceIPOutput(ctx *pulumi.Context, args LookupInstanceIPOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceIPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceIPResult, error) {
			args := v.(LookupInstanceIPArgs)
			r, err := LookupInstanceIP(ctx, &args, opts...)
			return *r, err
		}).(LookupInstanceIPResultOutput)
}

// A collection of arguments for invoking getInstanceIP.
type LookupInstanceIPOutputArgs struct {
	// The IPv4 address to retrieve
	// Only one of `address` and `id` should be specified.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IP address to retrieve
	// Only one of `address` and `id` should be specified.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupInstanceIPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceIPArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceIP.
type LookupInstanceIPResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceIPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceIPResult)(nil)).Elem()
}

func (o LookupInstanceIPResultOutput) ToLookupInstanceIPResultOutput() LookupInstanceIPResultOutput {
	return o
}

func (o LookupInstanceIPResultOutput) ToLookupInstanceIPResultOutputWithContext(ctx context.Context) LookupInstanceIPResultOutput {
	return o
}

// The IP address.
func (o LookupInstanceIPResultOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IP.
func (o LookupInstanceIPResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The organization ID the IP is associated with.
func (o LookupInstanceIPResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupInstanceIPResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse dns attached to this IP
func (o LookupInstanceIPResultOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) string { return v.Reverse }).(pulumi.StringOutput)
}

func (o LookupInstanceIPResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o LookupInstanceIPResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceIPResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceIPResultOutput{})
}
